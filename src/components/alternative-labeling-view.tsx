/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/QKwroCUmDeL
 */
import { ResponsiveBar } from "@nivo/bar"
import { CardFooter, Card } from "@/components/ui/card"

export function AlternativeLabelingView() {
  return (
    <div key="1" className="flex h-screen">
      <aside className="w-16 flex flex-col items-center justify-start p-4 gap-4 border-r dark:border-gray-800">
        <PencilIcon className="w-8 h-8 text-gray-500 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-50" />
        <EraserIcon className="w-8 h-8 text-gray-500 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-50" />
        <RulerIcon className="w-8 h-8 text-gray-500 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-50" />
        <PaintbrushIcon className="w-8 h-8 text-gray-500 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-50" />
      </aside>
      <main className="flex-1 flex flex-col">
        <div className="flex-1 relative border-b dark:border-gray-800">
          <BarChart className="w-full h-full" />
          <div className="absolute bottom-4 right-4 bg-white p-2 rounded-lg shadow-md dark:bg-gray-800">
            <p className="text-sm font-medium">
              Relative Size:
              <span className="font-bold">1.23 cm</span>
            </p>
          </div>
        </div>
        <div className="grid grid-cols-4 gap-4 p-4">
          <Card className="flex flex-col">
            <img
              alt="Leaf Image"
              className="w-full aspect-[1/1] object-cover"
              height="70"
              src="/placeholder.svg"
              width="70"
            />
            <CardFooter className="flex justify-between items-center">
              <p className="text-sm">Leaf 1</p>
              <TagIcon className="w-4 h-4 text-gray-500 dark:text-gray-400" />
            </CardFooter>
          </Card>
          <Card className="flex flex-col">
            <img
              alt="Leaf Image"
              className="w-full aspect-[1/1] object-cover"
              height="70"
              src="/placeholder.svg"
              width="70"
            />
            <CardFooter className="flex justify-between items-center">
              <p className="text-sm">Leaf 2</p>
              <TagIcon className="w-4 h-4 text-gray-500 dark:text-gray-400" />
            </CardFooter>
          </Card>
          <Card className="flex flex-col">
            <img
              alt="Leaf Image"
              className="w-full aspect-[1/1] object-cover"
              height="70"
              src="/placeholder.svg"
              width="70"
            />
            <CardFooter className="flex justify-between items-center">
              <p className="text-sm">Leaf 3</p>
              <TagIcon className="w-4 h-4 text-gray-500 dark:text-gray-400" />
            </CardFooter>
          </Card>
          <Card className="flex flex-col">
            <img
              alt="Leaf Image"
              className="w-full aspect-[1/1] object-cover"
              height="70"
              src="/placeholder.svg"
              width="70"
            />
            <CardFooter className="flex justify-between items-center">
              <p className="text-sm">Leaf 4</p>
              <TagIcon className="w-4 h-4 text-gray-500 dark:text-gray-400" />
            </CardFooter>
          </Card>
        </div>
      </main>
    </div>
  )
}


function PencilIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z" />
      <path d="m15 5 4 4" />
    </svg>
  )
}


function EraserIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m7 21-4.3-4.3c-1-1-1-2.5 0-3.4l9.6-9.6c1-1 2.5-1 3.4 0l5.6 5.6c1 1 1 2.5 0 3.4L13 21" />
      <path d="M22 21H7" />
      <path d="m5 11 9 9" />
    </svg>
  )
}


function RulerIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M21.3 15.3a2.4 2.4 0 0 1 0 3.4l-2.6 2.6a2.4 2.4 0 0 1-3.4 0L2.7 8.7a2.41 2.41 0 0 1 0-3.4l2.6-2.6a2.41 2.41 0 0 1 3.4 0Z" />
      <path d="m14.5 12.5 2-2" />
      <path d="m11.5 9.5 2-2" />
      <path d="m8.5 6.5 2-2" />
      <path d="m17.5 15.5 2-2" />
    </svg>
  )
}


function PaintbrushIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18.37 2.63 14 7l-1.59-1.59a2 2 0 0 0-2.82 0L8 7l9 9 1.59-1.59a2 2 0 0 0 0-2.82L17 10l4.37-4.37a2.12 2.12 0 1 0-3-3Z" />
      <path d="M9 8c-2 3-4 3.5-7 4l8 10c2-1 6-5 6-7" />
      <path d="M14.5 17.5 4.5 15" />
    </svg>
  )
}


function BarChart(props) {
  return (
    <div {...props}>
      <ResponsiveBar
        data={[
          { name: "Jan", count: 111 },
          { name: "Feb", count: 157 },
          { name: "Mar", count: 129 },
          { name: "Apr", count: 150 },
          { name: "May", count: 119 },
          { name: "Jun", count: 72 },
        ]}
        keys={["count"]}
        indexBy="name"
        margin={{ top: 0, right: 0, bottom: 40, left: 40 }}
        padding={0.3}
        colors={["#2563eb"]}
        axisBottom={{
          tickSize: 0,
          tickPadding: 16,
        }}
        axisLeft={{
          tickSize: 0,
          tickValues: 4,
          tickPadding: 16,
        }}
        gridYValues={4}
        theme={{
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
          grid: {
            line: {
              stroke: "#f3f4f6",
            },
          },
        }}
        tooltipLabel={({ id }) => `${id}`}
        enableLabel={false}
        role="application"
        ariaLabel="A bar chart showing data"
      />
    </div>
  )
}


function TagIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M12 2H2v10l9.29 9.29c.94.94 2.48.94 3.42 0l6.58-6.58c.94-.94.94-2.48 0-3.42L12 2Z" />
      <path d="M7 7h.01" />
    </svg>
  )
}
